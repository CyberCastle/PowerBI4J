/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI user access right entry for workspace
 */
@ApiModel(description = "A Power BI user access right entry for workspace")
@JsonPropertyOrder({ GroupUser.JSON_PROPERTY_GROUP_USER_ACCESS_RIGHT, GroupUser.JSON_PROPERTY_EMAIL_ADDRESS,
        GroupUser.JSON_PROPERTY_DISPLAY_NAME, GroupUser.JSON_PROPERTY_IDENTIFIER,
        GroupUser.JSON_PROPERTY_PRINCIPAL_TYPE })

public class GroupUser {
    /**
     * Access rights user has for the workspace
     */
    public enum GroupUserAccessRightEnum {
        NONE("None"),

        MEMBER("Member"),

        ADMIN("Admin"),

        CONTRIBUTOR("Contributor");

        private String value;

        GroupUserAccessRightEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static GroupUserAccessRightEnum fromValue(String value) {
            for (GroupUserAccessRightEnum b : GroupUserAccessRightEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_GROUP_USER_ACCESS_RIGHT = "groupUserAccessRight";
    private GroupUserAccessRightEnum groupUserAccessRight;

    public static final String JSON_PROPERTY_EMAIL_ADDRESS = "emailAddress";
    private String emailAddress;

    public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
    private String displayName;

    public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
    private String identifier;

    /**
     * The principal type
     */
    public enum PrincipalTypeEnum {
        USER("User"),

        GROUP("Group"),

        APP("App");

        private String value;

        PrincipalTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static PrincipalTypeEnum fromValue(String value) {
            for (PrincipalTypeEnum b : PrincipalTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_PRINCIPAL_TYPE = "principalType";
    private PrincipalTypeEnum principalType;

    public GroupUser groupUserAccessRight(GroupUserAccessRightEnum groupUserAccessRight) {

        this.groupUserAccessRight = groupUserAccessRight;
        return this;
    }

    /**
     * Access rights user has for the workspace
     * 
     * @return groupUserAccessRight
     **/
    @ApiModelProperty(required = true, value = "Access rights user has for the workspace")
    @JsonProperty(JSON_PROPERTY_GROUP_USER_ACCESS_RIGHT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public GroupUserAccessRightEnum getGroupUserAccessRight() {
        return groupUserAccessRight;
    }

    public void setGroupUserAccessRight(GroupUserAccessRightEnum groupUserAccessRight) {
        this.groupUserAccessRight = groupUserAccessRight;
    }

    public GroupUser emailAddress(String emailAddress) {

        this.emailAddress = emailAddress;
        return this;
    }

    /**
     * Email address of the user
     * 
     * @return emailAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Email address of the user")
    @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getEmailAddress() {
        return emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    public GroupUser displayName(String displayName) {

        this.displayName = displayName;
        return this;
    }

    /**
     * Display name of the principal
     * 
     * @return displayName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Display name of the principal")
    @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDisplayName() {
        return displayName;
    }

    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    public GroupUser identifier(String identifier) {

        this.identifier = identifier;
        return this;
    }

    /**
     * Identifier of the principal
     * 
     * @return identifier
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifier of the principal")
    @JsonProperty(JSON_PROPERTY_IDENTIFIER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(String identifier) {
        this.identifier = identifier;
    }

    public GroupUser principalType(PrincipalTypeEnum principalType) {

        this.principalType = principalType;
        return this;
    }

    /**
     * The principal type
     * 
     * @return principalType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The principal type")
    @JsonProperty(JSON_PROPERTY_PRINCIPAL_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PrincipalTypeEnum getPrincipalType() {
        return principalType;
    }

    public void setPrincipalType(PrincipalTypeEnum principalType) {
        this.principalType = principalType;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GroupUser groupUser = (GroupUser) o;
        return Objects.equals(this.groupUserAccessRight, groupUser.groupUserAccessRight)
                && Objects.equals(this.emailAddress, groupUser.emailAddress)
                && Objects.equals(this.displayName, groupUser.displayName)
                && Objects.equals(this.identifier, groupUser.identifier)
                && Objects.equals(this.principalType, groupUser.principalType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groupUserAccessRight, emailAddress, displayName, identifier, principalType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GroupUser {\n");
        sb.append("    groupUserAccessRight: ").append(toIndentedString(groupUserAccessRight)).append("\n");
        sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
        sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
        sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
        sb.append("    principalType: ").append(toIndentedString(principalType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
