/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The import object
 */
@ApiModel(description = "The import object")
@JsonPropertyOrder({ ModelImport.JSON_PROPERTY_ID, ModelImport.JSON_PROPERTY_NAME,
        ModelImport.JSON_PROPERTY_IMPORT_STATE, ModelImport.JSON_PROPERTY_REPORTS, ModelImport.JSON_PROPERTY_DATASETS,
        ModelImport.JSON_PROPERTY_CREATED_DATE_TIME, ModelImport.JSON_PROPERTY_UPDATED_DATE_TIME })

public class ModelImport {
    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_IMPORT_STATE = "importState";
    private String importState;

    public static final String JSON_PROPERTY_REPORTS = "reports";
    private List<Report> reports = null;

    public static final String JSON_PROPERTY_DATASETS = "datasets";
    private List<Dataset> datasets = null;

    public static final String JSON_PROPERTY_CREATED_DATE_TIME = "createdDateTime";
    private OffsetDateTime createdDateTime;

    public static final String JSON_PROPERTY_UPDATED_DATE_TIME = "updatedDateTime";
    private OffsetDateTime updatedDateTime;

    public ModelImport id(UUID id) {

        this.id = id;
        return this;
    }

    /**
     * The import id
     * 
     * @return id
     **/
    @ApiModelProperty(required = true, value = "The import id")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    public ModelImport name(String name) {

        this.name = name;
        return this;
    }

    /**
     * The import name
     * 
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The import name")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public ModelImport importState(String importState) {

        this.importState = importState;
        return this;
    }

    /**
     * The import upload state
     * 
     * @return importState
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The import upload state")
    @JsonProperty(JSON_PROPERTY_IMPORT_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getImportState() {
        return importState;
    }

    public void setImportState(String importState) {
        this.importState = importState;
    }

    public ModelImport reports(List<Report> reports) {

        this.reports = reports;
        return this;
    }

    public ModelImport addReportsItem(Report reportsItem) {
        if (this.reports == null) {
            this.reports = new ArrayList<>();
        }
        this.reports.add(reportsItem);
        return this;
    }

    /**
     * The reports associated with this import
     * 
     * @return reports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The reports associated with this import")
    @JsonProperty(JSON_PROPERTY_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Report> getReports() {
        return reports;
    }

    public void setReports(List<Report> reports) {
        this.reports = reports;
    }

    public ModelImport datasets(List<Dataset> datasets) {

        this.datasets = datasets;
        return this;
    }

    public ModelImport addDatasetsItem(Dataset datasetsItem) {
        if (this.datasets == null) {
            this.datasets = new ArrayList<>();
        }
        this.datasets.add(datasetsItem);
        return this;
    }

    /**
     * The datasets associated with this import
     * 
     * @return datasets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The datasets associated with this import")
    @JsonProperty(JSON_PROPERTY_DATASETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Dataset> getDatasets() {
        return datasets;
    }

    public void setDatasets(List<Dataset> datasets) {
        this.datasets = datasets;
    }

    public ModelImport createdDateTime(OffsetDateTime createdDateTime) {

        this.createdDateTime = createdDateTime;
        return this;
    }

    /**
     * Import creation time
     * 
     * @return createdDateTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Import creation time")
    @JsonProperty(JSON_PROPERTY_CREATED_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getCreatedDateTime() {
        return createdDateTime;
    }

    public void setCreatedDateTime(OffsetDateTime createdDateTime) {
        this.createdDateTime = createdDateTime;
    }

    public ModelImport updatedDateTime(OffsetDateTime updatedDateTime) {

        this.updatedDateTime = updatedDateTime;
        return this;
    }

    /**
     * Import last update time
     * 
     * @return updatedDateTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Import last update time")
    @JsonProperty(JSON_PROPERTY_UPDATED_DATE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getUpdatedDateTime() {
        return updatedDateTime;
    }

    public void setUpdatedDateTime(OffsetDateTime updatedDateTime) {
        this.updatedDateTime = updatedDateTime;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ModelImport _import = (ModelImport) o;
        return Objects.equals(this.id, _import.id) && Objects.equals(this.name, _import.name)
                && Objects.equals(this.importState, _import.importState)
                && Objects.equals(this.reports, _import.reports) && Objects.equals(this.datasets, _import.datasets)
                && Objects.equals(this.createdDateTime, _import.createdDateTime)
                && Objects.equals(this.updatedDateTime, _import.updatedDateTime);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, importState, reports, datasets, createdDateTime, updatedDateTime);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ModelImport {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    importState: ").append(toIndentedString(importState)).append("\n");
        sb.append("    reports: ").append(toIndentedString(reports)).append("\n");
        sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
        sb.append("    createdDateTime: ").append(toIndentedString(createdDateTime)).append("\n");
        sb.append("    updatedDateTime: ").append(toIndentedString(updatedDateTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
