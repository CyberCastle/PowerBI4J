/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI datasource
 */
@ApiModel(description = "A Power BI datasource")
@JsonPropertyOrder({ Datasource.JSON_PROPERTY_NAME, Datasource.JSON_PROPERTY_CONNECTION_STRING,
        Datasource.JSON_PROPERTY_DATASOURCE_TYPE, Datasource.JSON_PROPERTY_CONNECTION_DETAILS,
        Datasource.JSON_PROPERTY_GATEWAY_ID, Datasource.JSON_PROPERTY_DATASOURCE_ID })

public class Datasource {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_CONNECTION_STRING = "connectionString";
    private String connectionString;

    public static final String JSON_PROPERTY_DATASOURCE_TYPE = "datasourceType";
    private String datasourceType;

    public static final String JSON_PROPERTY_CONNECTION_DETAILS = "connectionDetails";
    private DatasourceConnectionDetails connectionDetails;

    public static final String JSON_PROPERTY_GATEWAY_ID = "gatewayId";
    private UUID gatewayId;

    public static final String JSON_PROPERTY_DATASOURCE_ID = "datasourceId";
    private UUID datasourceId;

    public Datasource name(String name) {

        this.name = name;
        return this;
    }

    /**
     * (Deprecated) The datasource name. Available only for DirectQuery.
     * 
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "(Deprecated) The datasource name. Available only for DirectQuery.")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Datasource connectionString(String connectionString) {

        this.connectionString = connectionString;
        return this;
    }

    /**
     * (Deprecated) The datasource connection string. Available only for
     * DirectQuery.
     * 
     * @return connectionString
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "(Deprecated) The datasource connection string. Available only for DirectQuery.")
    @JsonProperty(JSON_PROPERTY_CONNECTION_STRING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConnectionString() {
        return connectionString;
    }

    public void setConnectionString(String connectionString) {
        this.connectionString = connectionString;
    }

    public Datasource datasourceType(String datasourceType) {

        this.datasourceType = datasourceType;
        return this;
    }

    /**
     * The datasource type
     * 
     * @return datasourceType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The datasource type")
    @JsonProperty(JSON_PROPERTY_DATASOURCE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDatasourceType() {
        return datasourceType;
    }

    public void setDatasourceType(String datasourceType) {
        this.datasourceType = datasourceType;
    }

    public Datasource connectionDetails(DatasourceConnectionDetails connectionDetails) {

        this.connectionDetails = connectionDetails;
        return this;
    }

    /**
     * Get connectionDetails
     * 
     * @return connectionDetails
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CONNECTION_DETAILS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DatasourceConnectionDetails getConnectionDetails() {
        return connectionDetails;
    }

    public void setConnectionDetails(DatasourceConnectionDetails connectionDetails) {
        this.connectionDetails = connectionDetails;
    }

    public Datasource gatewayId(UUID gatewayId) {

        this.gatewayId = gatewayId;
        return this;
    }

    /**
     * The bound gateway id. Empty when not bound to a gateway.
     * 
     * @return gatewayId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The bound gateway id. Empty when not bound to a gateway.")
    @JsonProperty(JSON_PROPERTY_GATEWAY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getGatewayId() {
        return gatewayId;
    }

    public void setGatewayId(UUID gatewayId) {
        this.gatewayId = gatewayId;
    }

    public Datasource datasourceId(UUID datasourceId) {

        this.datasourceId = datasourceId;
        return this;
    }

    /**
     * The bound datasource id. Empty when not bound to a gateway.
     * 
     * @return datasourceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The bound datasource id. Empty when not bound to a gateway.")
    @JsonProperty(JSON_PROPERTY_DATASOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getDatasourceId() {
        return datasourceId;
    }

    public void setDatasourceId(UUID datasourceId) {
        this.datasourceId = datasourceId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Datasource datasource = (Datasource) o;
        return Objects.equals(this.name, datasource.name)
                && Objects.equals(this.connectionString, datasource.connectionString)
                && Objects.equals(this.datasourceType, datasource.datasourceType)
                && Objects.equals(this.connectionDetails, datasource.connectionDetails)
                && Objects.equals(this.gatewayId, datasource.gatewayId)
                && Objects.equals(this.datasourceId, datasource.datasourceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, connectionString, datasourceType, connectionDetails, gatewayId, datasourceId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Datasource {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    connectionString: ").append(toIndentedString(connectionString)).append("\n");
        sb.append("    datasourceType: ").append(toIndentedString(datasourceType)).append("\n");
        sb.append("    connectionDetails: ").append(toIndentedString(connectionDetails)).append("\n");
        sb.append("    gatewayId: ").append(toIndentedString(gatewayId)).append("\n");
        sb.append("    datasourceId: ").append(toIndentedString(datasourceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
