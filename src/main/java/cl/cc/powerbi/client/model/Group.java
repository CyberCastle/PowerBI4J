/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI group
 */
@ApiModel(description = "A Power BI group")
@JsonPropertyOrder({ Group.JSON_PROPERTY_ID, Group.JSON_PROPERTY_NAME, Group.JSON_PROPERTY_IS_READ_ONLY,
        Group.JSON_PROPERTY_IS_ON_DEDICATED_CAPACITY, Group.JSON_PROPERTY_CAPACITY_ID, Group.JSON_PROPERTY_DESCRIPTION,
        Group.JSON_PROPERTY_TYPE, Group.JSON_PROPERTY_STATE, Group.JSON_PROPERTY_USERS, Group.JSON_PROPERTY_REPORTS,
        Group.JSON_PROPERTY_DASHBOARDS, Group.JSON_PROPERTY_DATASETS, Group.JSON_PROPERTY_DATAFLOWS,
        Group.JSON_PROPERTY_DATAFLOW_STORAGE_ID, Group.JSON_PROPERTY_WORKBOOKS })

public class Group {
    public static final String JSON_PROPERTY_ID = "id";
    private UUID id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_IS_READ_ONLY = "isReadOnly";
    private Boolean isReadOnly;

    public static final String JSON_PROPERTY_IS_ON_DEDICATED_CAPACITY = "isOnDedicatedCapacity";
    private Boolean isOnDedicatedCapacity;

    public static final String JSON_PROPERTY_CAPACITY_ID = "capacityId";
    private UUID capacityId;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public static final String JSON_PROPERTY_STATE = "state";
    private String state;

    public static final String JSON_PROPERTY_USERS = "users";
    private List<GroupUser> users = null;

    public static final String JSON_PROPERTY_REPORTS = "reports";
    private List<Report> reports = null;

    public static final String JSON_PROPERTY_DASHBOARDS = "dashboards";
    private List<Dashboard> dashboards = null;

    public static final String JSON_PROPERTY_DATASETS = "datasets";
    private List<Dataset> datasets = null;

    public static final String JSON_PROPERTY_DATAFLOWS = "dataflows";
    private List<Dataflow> dataflows = null;

    public static final String JSON_PROPERTY_DATAFLOW_STORAGE_ID = "dataflowStorageId";
    private UUID dataflowStorageId;

    public static final String JSON_PROPERTY_WORKBOOKS = "workbooks";
    private List<Workbook> workbooks = null;

    public Group id(UUID id) {

        this.id = id;
        return this;
    }

    /**
     * The workspace id
     * 
     * @return id
     **/
    @ApiModelProperty(required = true, value = "The workspace id")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    public Group name(String name) {

        this.name = name;
        return this;
    }

    /**
     * The group name
     * 
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The group name")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Group isReadOnly(Boolean isReadOnly) {

        this.isReadOnly = isReadOnly;
        return this;
    }

    /**
     * Is the group read only
     * 
     * @return isReadOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Is the group read only")
    @JsonProperty(JSON_PROPERTY_IS_READ_ONLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsReadOnly() {
        return isReadOnly;
    }

    public void setIsReadOnly(Boolean isReadOnly) {
        this.isReadOnly = isReadOnly;
    }

    public Group isOnDedicatedCapacity(Boolean isOnDedicatedCapacity) {

        this.isOnDedicatedCapacity = isOnDedicatedCapacity;
        return this;
    }

    /**
     * Is the group on dedicated capacity
     * 
     * @return isOnDedicatedCapacity
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Is the group on dedicated capacity")
    @JsonProperty(JSON_PROPERTY_IS_ON_DEDICATED_CAPACITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsOnDedicatedCapacity() {
        return isOnDedicatedCapacity;
    }

    public void setIsOnDedicatedCapacity(Boolean isOnDedicatedCapacity) {
        this.isOnDedicatedCapacity = isOnDedicatedCapacity;
    }

    public Group capacityId(UUID capacityId) {

        this.capacityId = capacityId;
        return this;
    }

    /**
     * The capacity id
     * 
     * @return capacityId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The capacity id")
    @JsonProperty(JSON_PROPERTY_CAPACITY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getCapacityId() {
        return capacityId;
    }

    public void setCapacityId(UUID capacityId) {
        this.capacityId = capacityId;
    }

    public Group description(String description) {

        this.description = description;
        return this;
    }

    /**
     * The group description. Available only for admin API calls.
     * 
     * @return description
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The group description. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Group type(String type) {

        this.type = type;
        return this;
    }

    /**
     * The type of group. Available only for admin API calls.
     * 
     * @return type
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The type of group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Group state(String state) {

        this.state = state;
        return this;
    }

    /**
     * The group state. Available only for admin API calls.
     * 
     * @return state
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The group state. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public Group users(List<GroupUser> users) {

        this.users = users;
        return this;
    }

    public Group addUsersItem(GroupUser usersItem) {
        if (this.users == null) {
            this.users = new ArrayList<>();
        }
        this.users.add(usersItem);
        return this;
    }

    /**
     * The users that belong to the group, and their access rights. Available only
     * for admin API calls.
     * 
     * @return users
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The users that belong to the group, and their access rights. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_USERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<GroupUser> getUsers() {
        return users;
    }

    public void setUsers(List<GroupUser> users) {
        this.users = users;
    }

    public Group reports(List<Report> reports) {

        this.reports = reports;
        return this;
    }

    public Group addReportsItem(Report reportsItem) {
        if (this.reports == null) {
            this.reports = new ArrayList<>();
        }
        this.reports.add(reportsItem);
        return this;
    }

    /**
     * The reports that belong to the group. Available only for admin API calls.
     * 
     * @return reports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The reports that belong to the group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Report> getReports() {
        return reports;
    }

    public void setReports(List<Report> reports) {
        this.reports = reports;
    }

    public Group dashboards(List<Dashboard> dashboards) {

        this.dashboards = dashboards;
        return this;
    }

    public Group addDashboardsItem(Dashboard dashboardsItem) {
        if (this.dashboards == null) {
            this.dashboards = new ArrayList<>();
        }
        this.dashboards.add(dashboardsItem);
        return this;
    }

    /**
     * The dashboards that belong to the group. Available only for admin API calls.
     * 
     * @return dashboards
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dashboards that belong to the group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_DASHBOARDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Dashboard> getDashboards() {
        return dashboards;
    }

    public void setDashboards(List<Dashboard> dashboards) {
        this.dashboards = dashboards;
    }

    public Group datasets(List<Dataset> datasets) {

        this.datasets = datasets;
        return this;
    }

    public Group addDatasetsItem(Dataset datasetsItem) {
        if (this.datasets == null) {
            this.datasets = new ArrayList<>();
        }
        this.datasets.add(datasetsItem);
        return this;
    }

    /**
     * The datasets that belong to the group. Available only for admin API calls.
     * 
     * @return datasets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The datasets that belong to the group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_DATASETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Dataset> getDatasets() {
        return datasets;
    }

    public void setDatasets(List<Dataset> datasets) {
        this.datasets = datasets;
    }

    public Group dataflows(List<Dataflow> dataflows) {

        this.dataflows = dataflows;
        return this;
    }

    public Group addDataflowsItem(Dataflow dataflowsItem) {
        if (this.dataflows == null) {
            this.dataflows = new ArrayList<>();
        }
        this.dataflows.add(dataflowsItem);
        return this;
    }

    /**
     * The dataflows that belong to the group. Available only for admin API calls.
     * 
     * @return dataflows
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataflows that belong to the group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_DATAFLOWS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Dataflow> getDataflows() {
        return dataflows;
    }

    public void setDataflows(List<Dataflow> dataflows) {
        this.dataflows = dataflows;
    }

    public Group dataflowStorageId(UUID dataflowStorageId) {

        this.dataflowStorageId = dataflowStorageId;
        return this;
    }

    /**
     * The Power BI dataflow storage account id
     * 
     * @return dataflowStorageId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The Power BI dataflow storage account id")
    @JsonProperty(JSON_PROPERTY_DATAFLOW_STORAGE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getDataflowStorageId() {
        return dataflowStorageId;
    }

    public void setDataflowStorageId(UUID dataflowStorageId) {
        this.dataflowStorageId = dataflowStorageId;
    }

    public Group workbooks(List<Workbook> workbooks) {

        this.workbooks = workbooks;
        return this;
    }

    public Group addWorkbooksItem(Workbook workbooksItem) {
        if (this.workbooks == null) {
            this.workbooks = new ArrayList<>();
        }
        this.workbooks.add(workbooksItem);
        return this;
    }

    /**
     * The workbooks that belong to the group. Available only for admin API calls.
     * 
     * @return workbooks
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The workbooks that belong to the group. Available only for admin API calls.")
    @JsonProperty(JSON_PROPERTY_WORKBOOKS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Workbook> getWorkbooks() {
        return workbooks;
    }

    public void setWorkbooks(List<Workbook> workbooks) {
        this.workbooks = workbooks;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Group group = (Group) o;
        return Objects.equals(this.id, group.id) && Objects.equals(this.name, group.name)
                && Objects.equals(this.isReadOnly, group.isReadOnly)
                && Objects.equals(this.isOnDedicatedCapacity, group.isOnDedicatedCapacity)
                && Objects.equals(this.capacityId, group.capacityId)
                && Objects.equals(this.description, group.description) && Objects.equals(this.type, group.type)
                && Objects.equals(this.state, group.state) && Objects.equals(this.users, group.users)
                && Objects.equals(this.reports, group.reports) && Objects.equals(this.dashboards, group.dashboards)
                && Objects.equals(this.datasets, group.datasets) && Objects.equals(this.dataflows, group.dataflows)
                && Objects.equals(this.dataflowStorageId, group.dataflowStorageId)
                && Objects.equals(this.workbooks, group.workbooks);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, isReadOnly, isOnDedicatedCapacity, capacityId, description, type, state, users,
                reports, dashboards, datasets, dataflows, dataflowStorageId, workbooks);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Group {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    isReadOnly: ").append(toIndentedString(isReadOnly)).append("\n");
        sb.append("    isOnDedicatedCapacity: ").append(toIndentedString(isOnDedicatedCapacity)).append("\n");
        sb.append("    capacityId: ").append(toIndentedString(capacityId)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    users: ").append(toIndentedString(users)).append("\n");
        sb.append("    reports: ").append(toIndentedString(reports)).append("\n");
        sb.append("    dashboards: ").append(toIndentedString(dashboards)).append("\n");
        sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
        sb.append("    dataflows: ").append(toIndentedString(dataflows)).append("\n");
        sb.append("    dataflowStorageId: ").append(toIndentedString(dataflowStorageId)).append("\n");
        sb.append("    workbooks: ").append(toIndentedString(workbooks)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
