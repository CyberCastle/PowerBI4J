/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines the user identity and roles, for more details see this
 * [article](https://docs.microsoft.com/power-bi/developer/embedded-row-level-security)
 */
@ApiModel(description = "Defines the user identity and roles, for more details see this [article](https://docs.microsoft.com/power-bi/developer/embedded-row-level-security)")
@JsonPropertyOrder({ EffectiveIdentity.JSON_PROPERTY_USERNAME, EffectiveIdentity.JSON_PROPERTY_DATASETS,
        EffectiveIdentity.JSON_PROPERTY_ROLES, EffectiveIdentity.JSON_PROPERTY_CUSTOM_DATA,
        EffectiveIdentity.JSON_PROPERTY_IDENTITY_BLOB, EffectiveIdentity.JSON_PROPERTY_REPORTS })

public class EffectiveIdentity {
    public static final String JSON_PROPERTY_USERNAME = "username";
    private String username;

    public static final String JSON_PROPERTY_DATASETS = "datasets";
    private List<String> datasets = null;

    public static final String JSON_PROPERTY_ROLES = "roles";
    private List<String> roles = null;

    public static final String JSON_PROPERTY_CUSTOM_DATA = "customData";
    private String customData;

    public static final String JSON_PROPERTY_IDENTITY_BLOB = "identityBlob";
    private IdentityBlob identityBlob;

    public static final String JSON_PROPERTY_REPORTS = "reports";
    private List<String> reports = null;

    public EffectiveIdentity username(String username) {

        this.username = username;
        return this;
    }

    /**
     * The effective username reflected by a token for applying RLS rules (For
     * OnPrem model, username can be composed of alpha-numerical characters or any
     * of the following characters &#39;.&#39;, &#39;-&#39;, &#39;_&#39;,
     * &#39;!&#39;, &#39;#&#39;, &#39;^&#39;, &#39;~&#39;, &#39;\\\\&#39;,
     * &#39;@&#39;, also username cannot contain spaces. For Cloud model, username
     * can be composed of all ASCII characters. username must be up to 256
     * characters)
     * 
     * @return username
     **/
    @ApiModelProperty(required = true, value = "The effective username reflected by a token for applying RLS rules (For OnPrem model, username can be composed of alpha-numerical characters or any of the following characters  '.', '-', '_', '!', '#', '^', '~', '\\\\', '@', also username cannot contain spaces. For Cloud model, username can be composed of all ASCII characters. username must be up to 256 characters)")
    @JsonProperty(JSON_PROPERTY_USERNAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public EffectiveIdentity datasets(List<String> datasets) {

        this.datasets = datasets;
        return this;
    }

    public EffectiveIdentity addDatasetsItem(String datasetsItem) {
        if (this.datasets == null) {
            this.datasets = new ArrayList<>();
        }
        this.datasets.add(datasetsItem);
        return this;
    }

    /**
     * An array of datasets for which this identity applies
     * 
     * @return datasets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An array of datasets for which this identity applies")
    @JsonProperty(JSON_PROPERTY_DATASETS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getDatasets() {
        return datasets;
    }

    public void setDatasets(List<String> datasets) {
        this.datasets = datasets;
    }

    public EffectiveIdentity roles(List<String> roles) {

        this.roles = roles;
        return this;
    }

    public EffectiveIdentity addRolesItem(String rolesItem) {
        if (this.roles == null) {
            this.roles = new ArrayList<>();
        }
        this.roles.add(rolesItem);
        return this;
    }

    /**
     * An array of RLS roles reflected by a token when applying RLS rules (identity
     * can contain up to 50 roles, role can be composed of any character besides
     * &#39;,&#39; and must be up to 50 characters)
     * 
     * @return roles
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An array of RLS roles reflected by a token when applying RLS rules (identity can contain up to 50 roles, role can be composed of any character besides ',' and must be up to 50 characters)")
    @JsonProperty(JSON_PROPERTY_ROLES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getRoles() {
        return roles;
    }

    public void setRoles(List<String> roles) {
        this.roles = roles;
    }

    public EffectiveIdentity customData(String customData) {

        this.customData = customData;
        return this;
    }

    /**
     * The value of customdata to be used for applying RLS rules. Only supported for
     * live connections to Azure Analysis Services.
     * 
     * @return customData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The value of customdata to be used for applying RLS rules. Only supported for live connections to Azure Analysis Services.")
    @JsonProperty(JSON_PROPERTY_CUSTOM_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCustomData() {
        return customData;
    }

    public void setCustomData(String customData) {
        this.customData = customData;
    }

    public EffectiveIdentity identityBlob(IdentityBlob identityBlob) {

        this.identityBlob = identityBlob;
        return this;
    }

    /**
     * Get identityBlob
     * 
     * @return identityBlob
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IDENTITY_BLOB)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public IdentityBlob getIdentityBlob() {
        return identityBlob;
    }

    public void setIdentityBlob(IdentityBlob identityBlob) {
        this.identityBlob = identityBlob;
    }

    public EffectiveIdentity reports(List<String> reports) {

        this.reports = reports;
        return this;
    }

    public EffectiveIdentity addReportsItem(String reportsItem) {
        if (this.reports == null) {
            this.reports = new ArrayList<>();
        }
        this.reports.add(reportsItem);
        return this;
    }

    /**
     * An array of reports for which this identity applies, Only supported for
     * paginated reports
     * 
     * @return reports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An array of reports for which this identity applies, Only supported for paginated reports")
    @JsonProperty(JSON_PROPERTY_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getReports() {
        return reports;
    }

    public void setReports(List<String> reports) {
        this.reports = reports;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EffectiveIdentity effectiveIdentity = (EffectiveIdentity) o;
        return Objects.equals(this.username, effectiveIdentity.username)
                && Objects.equals(this.datasets, effectiveIdentity.datasets)
                && Objects.equals(this.roles, effectiveIdentity.roles)
                && Objects.equals(this.customData, effectiveIdentity.customData)
                && Objects.equals(this.identityBlob, effectiveIdentity.identityBlob)
                && Objects.equals(this.reports, effectiveIdentity.reports);
    }

    @Override
    public int hashCode() {
        return Objects.hash(username, datasets, roles, customData, identityBlob, reports);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class EffectiveIdentity {\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("    datasets: ").append(toIndentedString(datasets)).append("\n");
        sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
        sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
        sb.append("    identityBlob: ").append(toIndentedString(identityBlob)).append("\n");
        sb.append("    reports: ").append(toIndentedString(reports)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
