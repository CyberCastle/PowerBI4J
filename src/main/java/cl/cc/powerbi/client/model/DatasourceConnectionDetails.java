/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI datasource connection details
 */
@ApiModel(description = "A Power BI datasource connection details")
@JsonPropertyOrder({ DatasourceConnectionDetails.JSON_PROPERTY_SERVER,
        DatasourceConnectionDetails.JSON_PROPERTY_DATABASE, DatasourceConnectionDetails.JSON_PROPERTY_URL })

public class DatasourceConnectionDetails {
    public static final String JSON_PROPERTY_SERVER = "server";
    private String server;

    public static final String JSON_PROPERTY_DATABASE = "database";
    private String database;

    public static final String JSON_PROPERTY_URL = "url";
    private String url;

    public DatasourceConnectionDetails server(String server) {

        this.server = server;
        return this;
    }

    /**
     * The connection server
     * 
     * @return server
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The connection server")
    @JsonProperty(JSON_PROPERTY_SERVER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getServer() {
        return server;
    }

    public void setServer(String server) {
        this.server = server;
    }

    public DatasourceConnectionDetails database(String database) {

        this.database = database;
        return this;
    }

    /**
     * The connection database
     * 
     * @return database
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The connection database")
    @JsonProperty(JSON_PROPERTY_DATABASE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDatabase() {
        return database;
    }

    public void setDatabase(String database) {
        this.database = database;
    }

    public DatasourceConnectionDetails url(String url) {

        this.url = url;
        return this;
    }

    /**
     * The connection url
     * 
     * @return url
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The connection url")
    @JsonProperty(JSON_PROPERTY_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DatasourceConnectionDetails datasourceConnectionDetails = (DatasourceConnectionDetails) o;
        return Objects.equals(this.server, datasourceConnectionDetails.server)
                && Objects.equals(this.database, datasourceConnectionDetails.database)
                && Objects.equals(this.url, datasourceConnectionDetails.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(server, database, url);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DatasourceConnectionDetails {\n");
        sb.append("    server: ").append(toIndentedString(server)).append("\n");
        sb.append("    database: ").append(toIndentedString(database)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
