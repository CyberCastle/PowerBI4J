/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI refresh schedule for DirectQuery or LiveConnection, specified by
 * setting either the frequency or a combination of days and times.
 */
@ApiModel(description = "A Power BI refresh schedule for DirectQuery or LiveConnection, specified by setting either the frequency or a combination of days and times.")
@JsonPropertyOrder({ DirectQueryRefreshSchedule.JSON_PROPERTY_FREQUENCY, DirectQueryRefreshSchedule.JSON_PROPERTY_DAYS,
        DirectQueryRefreshSchedule.JSON_PROPERTY_TIMES, DirectQueryRefreshSchedule.JSON_PROPERTY_LOCAL_TIME_ZONE_ID })

public class DirectQueryRefreshSchedule {
    public static final String JSON_PROPERTY_FREQUENCY = "frequency";
    private Integer frequency;

    /**
     * Days of week
     */
    public enum DaysEnum {
        MONDAY("Monday"),

        TUESDAY("Tuesday"),

        WEDNESDAY("Wednesday"),

        THURSDAY("Thursday"),

        FRIDAY("Friday"),

        SATURDAY("Saturday"),

        SUNDAY("Sunday");

        private String value;

        DaysEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static DaysEnum fromValue(String value) {
            for (DaysEnum b : DaysEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_DAYS = "days";
    private List<DaysEnum> days = null;

    public static final String JSON_PROPERTY_TIMES = "times";
    private List<String> times = null;

    public static final String JSON_PROPERTY_LOCAL_TIME_ZONE_ID = "localTimeZoneId";
    private String localTimeZoneId;

    public DirectQueryRefreshSchedule frequency(Integer frequency) {

        this.frequency = frequency;
        return this;
    }

    /**
     * the refresh frequency in minutes, supported values are 15, 30, 60, 120, and
     * 180.
     * 
     * @return frequency
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "the refresh frequency in minutes, supported values are 15, 30, 60, 120, and 180.")
    @JsonProperty(JSON_PROPERTY_FREQUENCY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getFrequency() {
        return frequency;
    }

    public void setFrequency(Integer frequency) {
        this.frequency = frequency;
    }

    public DirectQueryRefreshSchedule days(List<DaysEnum> days) {

        this.days = days;
        return this;
    }

    public DirectQueryRefreshSchedule addDaysItem(DaysEnum daysItem) {
        if (this.days == null) {
            this.days = new ArrayList<>();
        }
        this.days.add(daysItem);
        return this;
    }

    /**
     * Days to execute the refresh
     * 
     * @return days
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Days to execute the refresh")
    @JsonProperty(JSON_PROPERTY_DAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<DaysEnum> getDays() {
        return days;
    }

    public void setDays(List<DaysEnum> days) {
        this.days = days;
    }

    public DirectQueryRefreshSchedule times(List<String> times) {

        this.times = times;
        return this;
    }

    public DirectQueryRefreshSchedule addTimesItem(String timesItem) {
        if (this.times == null) {
            this.times = new ArrayList<>();
        }
        this.times.add(timesItem);
        return this;
    }

    /**
     * Times to execute the refresh within each day
     * 
     * @return times
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Times to execute the refresh within each day")
    @JsonProperty(JSON_PROPERTY_TIMES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getTimes() {
        return times;
    }

    public void setTimes(List<String> times) {
        this.times = times;
    }

    public DirectQueryRefreshSchedule localTimeZoneId(String localTimeZoneId) {

        this.localTimeZoneId = localTimeZoneId;
        return this;
    }

    /**
     * The Id of the Time zone to use. See **Name of Time Zone** column in
     * [Microsoft Time Zone Index
     * Values.](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values)
     * 
     * @return localTimeZoneId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The Id of the Time zone to use. See **Name of Time Zone** column in [Microsoft Time Zone Index Values.](https://support.microsoft.com/help/973627/microsoft-time-zone-index-values)")
    @JsonProperty(JSON_PROPERTY_LOCAL_TIME_ZONE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLocalTimeZoneId() {
        return localTimeZoneId;
    }

    public void setLocalTimeZoneId(String localTimeZoneId) {
        this.localTimeZoneId = localTimeZoneId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DirectQueryRefreshSchedule directQueryRefreshSchedule = (DirectQueryRefreshSchedule) o;
        return Objects.equals(this.frequency, directQueryRefreshSchedule.frequency)
                && Objects.equals(this.days, directQueryRefreshSchedule.days)
                && Objects.equals(this.times, directQueryRefreshSchedule.times)
                && Objects.equals(this.localTimeZoneId, directQueryRefreshSchedule.localTimeZoneId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(frequency, days, times, localTimeZoneId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DirectQueryRefreshSchedule {\n");
        sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
        sb.append("    days: ").append(toIndentedString(days)).append("\n");
        sb.append("    times: ").append(toIndentedString(times)).append("\n");
        sb.append("    localTimeZoneId: ").append(toIndentedString(localTimeZoneId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
