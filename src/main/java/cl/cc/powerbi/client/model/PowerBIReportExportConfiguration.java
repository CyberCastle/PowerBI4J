/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Power BI report Export to file configuration
 */
@ApiModel(description = "Power BI report Export to file configuration")
@JsonPropertyOrder({ PowerBIReportExportConfiguration.JSON_PROPERTY_SETTINGS,
        PowerBIReportExportConfiguration.JSON_PROPERTY_DEFAULT_BOOKMARK,
        PowerBIReportExportConfiguration.JSON_PROPERTY_PAGES,
        PowerBIReportExportConfiguration.JSON_PROPERTY_IDENTITIES })

public class PowerBIReportExportConfiguration {
    public static final String JSON_PROPERTY_SETTINGS = "settings";
    private ExportReportSettings settings;

    public static final String JSON_PROPERTY_DEFAULT_BOOKMARK = "defaultBookmark";
    private PageBookmark defaultBookmark;

    public static final String JSON_PROPERTY_PAGES = "pages";
    private List<ExportReportPage> pages = null;

    public static final String JSON_PROPERTY_IDENTITIES = "identities";
    private List<EffectiveIdentity> identities = null;

    public PowerBIReportExportConfiguration settings(ExportReportSettings settings) {

        this.settings = settings;
        return this;
    }

    /**
     * Get settings
     * 
     * @return settings
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SETTINGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ExportReportSettings getSettings() {
        return settings;
    }

    public void setSettings(ExportReportSettings settings) {
        this.settings = settings;
    }

    public PowerBIReportExportConfiguration defaultBookmark(PageBookmark defaultBookmark) {

        this.defaultBookmark = defaultBookmark;
        return this;
    }

    /**
     * Get defaultBookmark
     * 
     * @return defaultBookmark
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DEFAULT_BOOKMARK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PageBookmark getDefaultBookmark() {
        return defaultBookmark;
    }

    public void setDefaultBookmark(PageBookmark defaultBookmark) {
        this.defaultBookmark = defaultBookmark;
    }

    public PowerBIReportExportConfiguration pages(List<ExportReportPage> pages) {

        this.pages = pages;
        return this;
    }

    public PowerBIReportExportConfiguration addPagesItem(ExportReportPage pagesItem) {
        if (this.pages == null) {
            this.pages = new ArrayList<>();
        }
        this.pages.add(pagesItem);
        return this;
    }

    /**
     * List of pages to export and their properties
     * 
     * @return pages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of pages to export and their properties")
    @JsonProperty(JSON_PROPERTY_PAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ExportReportPage> getPages() {
        return pages;
    }

    public void setPages(List<ExportReportPage> pages) {
        this.pages = pages;
    }

    public PowerBIReportExportConfiguration identities(List<EffectiveIdentity> identities) {

        this.identities = identities;
        return this;
    }

    public PowerBIReportExportConfiguration addIdentitiesItem(EffectiveIdentity identitiesItem) {
        if (this.identities == null) {
            this.identities = new ArrayList<>();
        }
        this.identities.add(identitiesItem);
        return this;
    }

    /**
     * List of identities to use for RLS rules
     * 
     * @return identities
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of identities to use for RLS rules")
    @JsonProperty(JSON_PROPERTY_IDENTITIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EffectiveIdentity> getIdentities() {
        return identities;
    }

    public void setIdentities(List<EffectiveIdentity> identities) {
        this.identities = identities;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PowerBIReportExportConfiguration powerBIReportExportConfiguration = (PowerBIReportExportConfiguration) o;
        return Objects.equals(this.settings, powerBIReportExportConfiguration.settings)
                && Objects.equals(this.defaultBookmark, powerBIReportExportConfiguration.defaultBookmark)
                && Objects.equals(this.pages, powerBIReportExportConfiguration.pages)
                && Objects.equals(this.identities, powerBIReportExportConfiguration.identities);
    }

    @Override
    public int hashCode() {
        return Objects.hash(settings, defaultBookmark, pages, identities);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PowerBIReportExportConfiguration {\n");
        sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
        sb.append("    defaultBookmark: ").append(toIndentedString(defaultBookmark)).append("\n");
        sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
        sb.append("    identities: ").append(toIndentedString(identities)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
