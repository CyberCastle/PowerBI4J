/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.time.OffsetDateTime;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI dataset
 */
@ApiModel(description = "A Power BI dataset")
@JsonPropertyOrder({ Dataset.JSON_PROPERTY_ID, Dataset.JSON_PROPERTY_NAME, Dataset.JSON_PROPERTY_CONFIGURED_BY,
        Dataset.JSON_PROPERTY_ADD_ROWS_A_P_I_ENABLED, Dataset.JSON_PROPERTY_WEB_URL,
        Dataset.JSON_PROPERTY_IS_REFRESHABLE, Dataset.JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_REQUIRED,
        Dataset.JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_ROLES_REQUIRED, Dataset.JSON_PROPERTY_IS_ON_PREM_GATEWAY_REQUIRED,
        Dataset.JSON_PROPERTY_ENCRYPTION, Dataset.JSON_PROPERTY_CREATED_DATE,
        Dataset.JSON_PROPERTY_CONTENT_PROVIDER_TYPE })

public class Dataset {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_CONFIGURED_BY = "configuredBy";
    private String configuredBy;

    public static final String JSON_PROPERTY_ADD_ROWS_A_P_I_ENABLED = "addRowsAPIEnabled";
    private Boolean addRowsAPIEnabled;

    public static final String JSON_PROPERTY_WEB_URL = "webUrl";
    private String webUrl;

    public static final String JSON_PROPERTY_IS_REFRESHABLE = "IsRefreshable";
    private Boolean isRefreshable;

    public static final String JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_REQUIRED = "IsEffectiveIdentityRequired";
    private Boolean isEffectiveIdentityRequired;

    public static final String JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_ROLES_REQUIRED = "IsEffectiveIdentityRolesRequired";
    private Boolean isEffectiveIdentityRolesRequired;

    public static final String JSON_PROPERTY_IS_ON_PREM_GATEWAY_REQUIRED = "IsOnPremGatewayRequired";
    private Boolean isOnPremGatewayRequired;

    public static final String JSON_PROPERTY_ENCRYPTION = "Encryption";
    private Encryption encryption;

    public static final String JSON_PROPERTY_CREATED_DATE = "CreatedDate";
    private OffsetDateTime createdDate;

    public static final String JSON_PROPERTY_CONTENT_PROVIDER_TYPE = "ContentProviderType";
    private String contentProviderType;

    public Dataset id(String id) {

        this.id = id;
        return this;
    }

    /**
     * The dataset id
     * 
     * @return id
     **/
    @ApiModelProperty(required = true, value = "The dataset id")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Dataset name(String name) {

        this.name = name;
        return this;
    }

    /**
     * The dataset name
     * 
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataset name")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Dataset configuredBy(String configuredBy) {

        this.configuredBy = configuredBy;
        return this;
    }

    /**
     * The dataset owner
     * 
     * @return configuredBy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataset owner")
    @JsonProperty(JSON_PROPERTY_CONFIGURED_BY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConfiguredBy() {
        return configuredBy;
    }

    public void setConfiguredBy(String configuredBy) {
        this.configuredBy = configuredBy;
    }

    public Dataset addRowsAPIEnabled(Boolean addRowsAPIEnabled) {

        this.addRowsAPIEnabled = addRowsAPIEnabled;
        return this;
    }

    /**
     * Whether the dataset allows adding new rows
     * 
     * @return addRowsAPIEnabled
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Whether the dataset allows adding new rows")
    @JsonProperty(JSON_PROPERTY_ADD_ROWS_A_P_I_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAddRowsAPIEnabled() {
        return addRowsAPIEnabled;
    }

    public void setAddRowsAPIEnabled(Boolean addRowsAPIEnabled) {
        this.addRowsAPIEnabled = addRowsAPIEnabled;
    }

    public Dataset webUrl(String webUrl) {

        this.webUrl = webUrl;
        return this;
    }

    /**
     * The dataset web url
     * 
     * @return webUrl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataset web url")
    @JsonProperty(JSON_PROPERTY_WEB_URL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getWebUrl() {
        return webUrl;
    }

    public void setWebUrl(String webUrl) {
        this.webUrl = webUrl;
    }

    public Dataset isRefreshable(Boolean isRefreshable) {

        this.isRefreshable = isRefreshable;
        return this;
    }

    /**
     * Can this dataset be refreshed
     * 
     * @return isRefreshable
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Can this dataset be refreshed")
    @JsonProperty(JSON_PROPERTY_IS_REFRESHABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsRefreshable() {
        return isRefreshable;
    }

    public void setIsRefreshable(Boolean isRefreshable) {
        this.isRefreshable = isRefreshable;
    }

    public Dataset isEffectiveIdentityRequired(Boolean isEffectiveIdentityRequired) {

        this.isEffectiveIdentityRequired = isEffectiveIdentityRequired;
        return this;
    }

    /**
     * Whether the dataset requires an effective identity. This indicates that you
     * must send an effective identity using the GenerateToken API.
     * 
     * @return isEffectiveIdentityRequired
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Whether the dataset requires an effective identity. This indicates that you must send an effective identity using the GenerateToken API.")
    @JsonProperty(JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_REQUIRED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsEffectiveIdentityRequired() {
        return isEffectiveIdentityRequired;
    }

    public void setIsEffectiveIdentityRequired(Boolean isEffectiveIdentityRequired) {
        this.isEffectiveIdentityRequired = isEffectiveIdentityRequired;
    }

    public Dataset isEffectiveIdentityRolesRequired(Boolean isEffectiveIdentityRolesRequired) {

        this.isEffectiveIdentityRolesRequired = isEffectiveIdentityRolesRequired;
        return this;
    }

    /**
     * Whether RLS is defined inside the PBIX file. This indicates that you must
     * specify a role.
     * 
     * @return isEffectiveIdentityRolesRequired
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Whether RLS is defined inside the PBIX file. This indicates that you must specify a role.")
    @JsonProperty(JSON_PROPERTY_IS_EFFECTIVE_IDENTITY_ROLES_REQUIRED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsEffectiveIdentityRolesRequired() {
        return isEffectiveIdentityRolesRequired;
    }

    public void setIsEffectiveIdentityRolesRequired(Boolean isEffectiveIdentityRolesRequired) {
        this.isEffectiveIdentityRolesRequired = isEffectiveIdentityRolesRequired;
    }

    public Dataset isOnPremGatewayRequired(Boolean isOnPremGatewayRequired) {

        this.isOnPremGatewayRequired = isOnPremGatewayRequired;
        return this;
    }

    /**
     * Dataset requires an On-premises Data Gateway
     * 
     * @return isOnPremGatewayRequired
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Dataset requires an On-premises Data Gateway")
    @JsonProperty(JSON_PROPERTY_IS_ON_PREM_GATEWAY_REQUIRED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIsOnPremGatewayRequired() {
        return isOnPremGatewayRequired;
    }

    public void setIsOnPremGatewayRequired(Boolean isOnPremGatewayRequired) {
        this.isOnPremGatewayRequired = isOnPremGatewayRequired;
    }

    public Dataset encryption(Encryption encryption) {

        this.encryption = encryption;
        return this;
    }

    /**
     * Get encryption
     * 
     * @return encryption
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ENCRYPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Encryption getEncryption() {
        return encryption;
    }

    public void setEncryption(Encryption encryption) {
        this.encryption = encryption;
    }

    public Dataset createdDate(OffsetDateTime createdDate) {

        this.createdDate = createdDate;
        return this;
    }

    /**
     * DateTime of creation of this dataset
     * 
     * @return createdDate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DateTime of creation of this dataset")
    @JsonProperty(JSON_PROPERTY_CREATED_DATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getCreatedDate() {
        return createdDate;
    }

    public void setCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
    }

    public Dataset contentProviderType(String contentProviderType) {

        this.contentProviderType = contentProviderType;
        return this;
    }

    /**
     * The content provider type for the dataset
     * 
     * @return contentProviderType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The content provider type for the dataset")
    @JsonProperty(JSON_PROPERTY_CONTENT_PROVIDER_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getContentProviderType() {
        return contentProviderType;
    }

    public void setContentProviderType(String contentProviderType) {
        this.contentProviderType = contentProviderType;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Dataset dataset = (Dataset) o;
        return Objects.equals(this.id, dataset.id) && Objects.equals(this.name, dataset.name)
                && Objects.equals(this.configuredBy, dataset.configuredBy)
                && Objects.equals(this.addRowsAPIEnabled, dataset.addRowsAPIEnabled)
                && Objects.equals(this.webUrl, dataset.webUrl)
                && Objects.equals(this.isRefreshable, dataset.isRefreshable)
                && Objects.equals(this.isEffectiveIdentityRequired, dataset.isEffectiveIdentityRequired)
                && Objects.equals(this.isEffectiveIdentityRolesRequired, dataset.isEffectiveIdentityRolesRequired)
                && Objects.equals(this.isOnPremGatewayRequired, dataset.isOnPremGatewayRequired)
                && Objects.equals(this.encryption, dataset.encryption)
                && Objects.equals(this.createdDate, dataset.createdDate)
                && Objects.equals(this.contentProviderType, dataset.contentProviderType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, configuredBy, addRowsAPIEnabled, webUrl, isRefreshable,
                isEffectiveIdentityRequired, isEffectiveIdentityRolesRequired, isOnPremGatewayRequired, encryption,
                createdDate, contentProviderType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Dataset {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    configuredBy: ").append(toIndentedString(configuredBy)).append("\n");
        sb.append("    addRowsAPIEnabled: ").append(toIndentedString(addRowsAPIEnabled)).append("\n");
        sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
        sb.append("    isRefreshable: ").append(toIndentedString(isRefreshable)).append("\n");
        sb.append("    isEffectiveIdentityRequired: ").append(toIndentedString(isEffectiveIdentityRequired))
                .append("\n");
        sb.append("    isEffectiveIdentityRolesRequired: ").append(toIndentedString(isEffectiveIdentityRolesRequired))
                .append("\n");
        sb.append("    isOnPremGatewayRequired: ").append(toIndentedString(isOnPremGatewayRequired)).append("\n");
        sb.append("    encryption: ").append(toIndentedString(encryption)).append("\n");
        sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
        sb.append("    contentProviderType: ").append(toIndentedString(contentProviderType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
