/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI dataset
 */
@ApiModel(description = "A Power BI dataset")
@JsonPropertyOrder({ CreateDatasetRequest.JSON_PROPERTY_NAME, CreateDatasetRequest.JSON_PROPERTY_TABLES,
        CreateDatasetRequest.JSON_PROPERTY_RELATIONSHIPS, CreateDatasetRequest.JSON_PROPERTY_DATASOURCES,
        CreateDatasetRequest.JSON_PROPERTY_DEFAULT_MODE })

public class CreateDatasetRequest {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_TABLES = "tables";
    private List<Table> tables = new ArrayList<>();

    public static final String JSON_PROPERTY_RELATIONSHIPS = "relationships";
    private List<Relationship> relationships = null;

    public static final String JSON_PROPERTY_DATASOURCES = "datasources";
    private List<Datasource> datasources = null;

    /**
     * The dataset mode or type.
     */
    public enum DefaultModeEnum {
        ASAZURE("AsAzure"),

        ASONPREM("AsOnPrem"),

        PUSH("Push"),

        STREAMING("Streaming"),

        PUSHSTREAMING("PushStreaming");

        private String value;

        DefaultModeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static DefaultModeEnum fromValue(String value) {
            for (DefaultModeEnum b : DefaultModeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_DEFAULT_MODE = "defaultMode";
    private DefaultModeEnum defaultMode;

    public CreateDatasetRequest name(String name) {

        this.name = name;
        return this;
    }

    /**
     * The dataset name
     * 
     * @return name
     **/
    @ApiModelProperty(required = true, value = "The dataset name")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public CreateDatasetRequest tables(List<Table> tables) {

        this.tables = tables;
        return this;
    }

    public CreateDatasetRequest addTablesItem(Table tablesItem) {
        this.tables.add(tablesItem);
        return this;
    }

    /**
     * The dataset tables.
     * 
     * @return tables
     **/
    @ApiModelProperty(required = true, value = "The dataset tables.")
    @JsonProperty(JSON_PROPERTY_TABLES)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Table> getTables() {
        return tables;
    }

    public void setTables(List<Table> tables) {
        this.tables = tables;
    }

    public CreateDatasetRequest relationships(List<Relationship> relationships) {

        this.relationships = relationships;
        return this;
    }

    public CreateDatasetRequest addRelationshipsItem(Relationship relationshipsItem) {
        if (this.relationships == null) {
            this.relationships = new ArrayList<>();
        }
        this.relationships.add(relationshipsItem);
        return this;
    }

    /**
     * The dataset relationships.
     * 
     * @return relationships
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataset relationships.")
    @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)

    public List<Relationship> getRelationships() {
        return relationships;
    }

    public void setRelationships(List<Relationship> relationships) {
        this.relationships = relationships;
    }

    public CreateDatasetRequest datasources(List<Datasource> datasources) {

        this.datasources = datasources;
        return this;
    }

    public CreateDatasetRequest addDatasourcesItem(Datasource datasourcesItem) {
        if (this.datasources == null) {
            this.datasources = new ArrayList<>();
        }
        this.datasources.add(datasourcesItem);
        return this;
    }

    /**
     * The datasources associated with this dataset.
     * 
     * @return datasources
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The datasources associated with this dataset.")
    @JsonProperty(JSON_PROPERTY_DATASOURCES)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)

    public List<Datasource> getDatasources() {
        return datasources;
    }

    public void setDatasources(List<Datasource> datasources) {
        this.datasources = datasources;
    }

    public CreateDatasetRequest defaultMode(DefaultModeEnum defaultMode) {

        this.defaultMode = defaultMode;
        return this;
    }

    /**
     * The dataset mode or type.
     * 
     * @return defaultMode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The dataset mode or type.")
    @JsonProperty(JSON_PROPERTY_DEFAULT_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DefaultModeEnum getDefaultMode() {
        return defaultMode;
    }

    public void setDefaultMode(DefaultModeEnum defaultMode) {
        this.defaultMode = defaultMode;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateDatasetRequest createDatasetRequest = (CreateDatasetRequest) o;
        return Objects.equals(this.name, createDatasetRequest.name)
                && Objects.equals(this.tables, createDatasetRequest.tables)
                && Objects.equals(this.relationships, createDatasetRequest.relationships)
                && Objects.equals(this.datasources, createDatasetRequest.datasources)
                && Objects.equals(this.defaultMode, createDatasetRequest.defaultMode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, tables, relationships, datasources, defaultMode);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateDatasetRequest {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    tables: ").append(toIndentedString(tables)).append("\n");
        sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
        sb.append("    datasources: ").append(toIndentedString(datasources)).append("\n");
        sb.append("    defaultMode: ").append(toIndentedString(defaultMode)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
