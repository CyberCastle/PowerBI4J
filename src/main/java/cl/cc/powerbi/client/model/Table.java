/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A dataset table
 */
@ApiModel(description = "A dataset table")
@JsonPropertyOrder({ Table.JSON_PROPERTY_NAME, Table.JSON_PROPERTY_COLUMNS, Table.JSON_PROPERTY_ROWS,
        Table.JSON_PROPERTY_MEASURES })

public class Table {
    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_COLUMNS = "columns";
    private List<Column> columns = new ArrayList<>();

    public static final String JSON_PROPERTY_ROWS = "rows";
    private List<Row> rows = null;

    public static final String JSON_PROPERTY_MEASURES = "measures";
    private List<Measure> measures = null;

    public Table name(String name) {

        this.name = name;
        return this;
    }

    /**
     * The table name
     * 
     * @return name
     **/
    @ApiModelProperty(required = true, value = "The table name")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Table columns(List<Column> columns) {

        this.columns = columns;
        return this;
    }

    public Table addColumnsItem(Column columnsItem) {
        this.columns.add(columnsItem);
        return this;
    }

    /**
     * The column schema for this table
     * 
     * @return columns
     **/
    @ApiModelProperty(required = true, value = "The column schema for this table")
    @JsonProperty(JSON_PROPERTY_COLUMNS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Column> getColumns() {
        return columns;
    }

    public void setColumns(List<Column> columns) {
        this.columns = columns;
    }

    public Table rows(List<Row> rows) {

        this.rows = rows;
        return this;
    }

    public Table addRowsItem(Row rowsItem) {
        if (this.rows == null) {
            this.rows = new ArrayList<>();
        }
        this.rows.add(rowsItem);
        return this;
    }

    /**
     * The data rows within this table
     * 
     * @return rows
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The data rows within this table")
    @JsonProperty(JSON_PROPERTY_ROWS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Row> getRows() {
        return rows;
    }

    public void setRows(List<Row> rows) {
        this.rows = rows;
    }

    public Table measures(List<Measure> measures) {

        this.measures = measures;
        return this;
    }

    public Table addMeasuresItem(Measure measuresItem) {
        if (this.measures == null) {
            this.measures = new ArrayList<>();
        }
        this.measures.add(measuresItem);
        return this;
    }

    /**
     * The measures within this table
     * 
     * @return measures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The measures within this table")
    @JsonProperty(JSON_PROPERTY_MEASURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Measure> getMeasures() {
        return measures;
    }

    public void setMeasures(List<Measure> measures) {
        this.measures = measures;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Table table = (Table) o;
        return Objects.equals(this.name, table.name) && Objects.equals(this.columns, table.columns)
                && Objects.equals(this.rows, table.rows) && Objects.equals(this.measures, table.measures);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, columns, rows, measures);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Table {\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
        sb.append("    rows: ").append(toIndentedString(rows)).append("\n");
        sb.append("    measures: ").append(toIndentedString(measures)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
