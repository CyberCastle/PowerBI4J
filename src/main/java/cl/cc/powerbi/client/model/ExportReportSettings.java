/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Export to file request settings
 */
@ApiModel(description = "Export to file request settings")
@JsonPropertyOrder({ ExportReportSettings.JSON_PROPERTY_LOCALE,
        ExportReportSettings.JSON_PROPERTY_INCLUDE_HIDDEN_PAGES })

public class ExportReportSettings {
    public static final String JSON_PROPERTY_LOCALE = "locale";
    private String locale;

    public static final String JSON_PROPERTY_INCLUDE_HIDDEN_PAGES = "includeHiddenPages";
    private Boolean includeHiddenPages;

    public ExportReportSettings locale(String locale) {

        this.locale = locale;
        return this;
    }

    /**
     * The locale to apply
     * 
     * @return locale
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The locale to apply")
    @JsonProperty(JSON_PROPERTY_LOCALE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLocale() {
        return locale;
    }

    public void setLocale(String locale) {
        this.locale = locale;
    }

    public ExportReportSettings includeHiddenPages(Boolean includeHiddenPages) {

        this.includeHiddenPages = includeHiddenPages;
        return this;
    }

    /**
     * A flag indicating whether to include hidden pages when exporting the entire
     * report (when passing specific pages this property will be ignored). If not
     * provided, the default behavior is to exclude hidden pages
     * 
     * @return includeHiddenPages
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A flag indicating whether to include hidden pages when exporting the entire report (when passing specific pages this property will be ignored). If not provided, the default behavior is to exclude hidden pages")
    @JsonProperty(JSON_PROPERTY_INCLUDE_HIDDEN_PAGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIncludeHiddenPages() {
        return includeHiddenPages;
    }

    public void setIncludeHiddenPages(Boolean includeHiddenPages) {
        this.includeHiddenPages = includeHiddenPages;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExportReportSettings exportReportSettings = (ExportReportSettings) o;
        return Objects.equals(this.locale, exportReportSettings.locale)
                && Objects.equals(this.includeHiddenPages, exportReportSettings.includeHiddenPages);
    }

    @Override
    public int hashCode() {
        return Objects.hash(locale, includeHiddenPages);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExportReportSettings {\n");
        sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
        sb.append("    includeHiddenPages: ").append(toIndentedString(includeHiddenPages)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
