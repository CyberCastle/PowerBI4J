/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.time.OffsetDateTime;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * A Power BI refresh history entry
 */
@ApiModel(description = "A Power BI refresh history entry")
@JsonPropertyOrder({ Refresh.JSON_PROPERTY_REFRESH_TYPE, Refresh.JSON_PROPERTY_START_TIME,
        Refresh.JSON_PROPERTY_END_TIME, Refresh.JSON_PROPERTY_SERVICE_EXCEPTION_JSON, Refresh.JSON_PROPERTY_STATUS,
        Refresh.JSON_PROPERTY_REQUEST_ID })

public class Refresh {
    /**
     * Type of refresh request
     */
    public enum RefreshTypeEnum {
        SCHEDULED("Scheduled"),

        ONDEMAND("OnDemand"),

        VIAAPI("ViaApi");

        private String value;

        RefreshTypeEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RefreshTypeEnum fromValue(String value) {
            for (RefreshTypeEnum b : RefreshTypeEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_REFRESH_TYPE = "refreshType";
    private RefreshTypeEnum refreshType;

    public static final String JSON_PROPERTY_START_TIME = "startTime";
    private OffsetDateTime startTime;

    public static final String JSON_PROPERTY_END_TIME = "endTime";
    private OffsetDateTime endTime;

    public static final String JSON_PROPERTY_SERVICE_EXCEPTION_JSON = "serviceExceptionJson";
    private String serviceExceptionJson;

    public static final String JSON_PROPERTY_STATUS = "status";
    private String status;

    public static final String JSON_PROPERTY_REQUEST_ID = "requestId";
    private String requestId;

    public Refresh refreshType(RefreshTypeEnum refreshType) {

        this.refreshType = refreshType;
        return this;
    }

    /**
     * Type of refresh request
     * 
     * @return refreshType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Type of refresh request")
    @JsonProperty(JSON_PROPERTY_REFRESH_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RefreshTypeEnum getRefreshType() {
        return refreshType;
    }

    public void setRefreshType(RefreshTypeEnum refreshType) {
        this.refreshType = refreshType;
    }

    public Refresh startTime(OffsetDateTime startTime) {

        this.startTime = startTime;
        return this;
    }

    /**
     * DateTime of start
     * 
     * @return startTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DateTime of start")
    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getStartTime() {
        return startTime;
    }

    public void setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
    }

    public Refresh endTime(OffsetDateTime endTime) {

        this.endTime = endTime;
        return this;
    }

    /**
     * DateTime of termination (may be empty if refresh is progress)
     * 
     * @return endTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DateTime of termination (may be empty if refresh is progress)")
    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getEndTime() {
        return endTime;
    }

    public void setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
    }

    public Refresh serviceExceptionJson(String serviceExceptionJson) {

        this.serviceExceptionJson = serviceExceptionJson;
        return this;
    }

    /**
     * Failure error code in json format (not empty only on error).
     * 
     * @return serviceExceptionJson
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Failure error code in json format (not empty only on error).")
    @JsonProperty(JSON_PROPERTY_SERVICE_EXCEPTION_JSON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getServiceExceptionJson() {
        return serviceExceptionJson;
    }

    public void setServiceExceptionJson(String serviceExceptionJson) {
        this.serviceExceptionJson = serviceExceptionJson;
    }

    public Refresh status(String status) {

        this.status = status;
        return this;
    }

    /**
     * &#39;Unknown&#39; - Unknown completion state or refresh is in progress.
     * endTime will be empty with this status. &lt;br/&gt;&#39;Completed&#39; -
     * refresh completed successfully &lt;br/&gt; &#39;Failed&#39; - Refresh failed.
     * serviceExceptionJson will contain the error. &lt;br/&gt;&#39;Disabled&#39; -
     * Refresh disabled by Selective Refresh.
     * 
     * @return status
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "'Unknown' - Unknown completion state or refresh is in progress. endTime will be empty with this status. <br/>'Completed' - refresh completed successfully <br/> 'Failed' - Refresh failed. serviceExceptionJson will contain the error. <br/>'Disabled' - Refresh disabled by Selective Refresh.")
    @JsonProperty(JSON_PROPERTY_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public Refresh requestId(String requestId) {

        this.requestId = requestId;
        return this;
    }

    /**
     * The identifier of the Refresh request. &lt;br/&gt;Please provide this
     * identifier in all service requests
     * 
     * @return requestId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The identifier of the Refresh request. <br/>Please provide this identifier in all service requests")
    @JsonProperty(JSON_PROPERTY_REQUEST_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRequestId() {
        return requestId;
    }

    public void setRequestId(String requestId) {
        this.requestId = requestId;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Refresh refresh = (Refresh) o;
        return Objects.equals(this.refreshType, refresh.refreshType)
                && Objects.equals(this.startTime, refresh.startTime) && Objects.equals(this.endTime, refresh.endTime)
                && Objects.equals(this.serviceExceptionJson, refresh.serviceExceptionJson)
                && Objects.equals(this.status, refresh.status) && Objects.equals(this.requestId, refresh.requestId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(refreshType, startTime, endTime, serviceExceptionJson, status, requestId);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Refresh {\n");
        sb.append("    refreshType: ").append(toIndentedString(refreshType)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    serviceExceptionJson: ").append(toIndentedString(serviceExceptionJson)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    requestId: ").append(toIndentedString(requestId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
