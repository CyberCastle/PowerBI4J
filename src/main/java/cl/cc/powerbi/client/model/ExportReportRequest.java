/*
 * Power BI Client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package cl.cc.powerbi.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The Export to file request
 */
@ApiModel(description = "The Export to file request")
@JsonPropertyOrder({ ExportReportRequest.JSON_PROPERTY_FORMAT,
        ExportReportRequest.JSON_PROPERTY_POWER_B_I_REPORT_CONFIGURATION,
        ExportReportRequest.JSON_PROPERTY_PAGINATED_REPORT_CONFIGURATION })

public class ExportReportRequest {
    /**
     * Export to file format
     */
    public enum FormatEnum {
        PPTX("PPTX"),

        PDF("PDF"),

        PNG("PNG"),

        IMAGE("IMAGE"),

        XLSX("XLSX"),

        DOCX("DOCX"),

        CSV("CSV"),

        XML("XML"),

        MHTML("MHTML");

        private String value;

        FormatEnum(String value) {
            this.value = value;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static FormatEnum fromValue(String value) {
            for (FormatEnum b : FormatEnum.values()) {
                if (b.value.equals(value)) {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_FORMAT = "format";
    private FormatEnum format;

    public static final String JSON_PROPERTY_POWER_B_I_REPORT_CONFIGURATION = "powerBIReportConfiguration";
    private PowerBIReportExportConfiguration powerBIReportConfiguration;

    public static final String JSON_PROPERTY_PAGINATED_REPORT_CONFIGURATION = "paginatedReportConfiguration";
    private PaginatedReportExportConfiguration paginatedReportConfiguration;

    public ExportReportRequest format(FormatEnum format) {

        this.format = format;
        return this;
    }

    /**
     * Export to file format
     * 
     * @return format
     **/
    @ApiModelProperty(required = true, value = "Export to file format")
    @JsonProperty(JSON_PROPERTY_FORMAT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public FormatEnum getFormat() {
        return format;
    }

    public void setFormat(FormatEnum format) {
        this.format = format;
    }

    public ExportReportRequest powerBIReportConfiguration(PowerBIReportExportConfiguration powerBIReportConfiguration) {

        this.powerBIReportConfiguration = powerBIReportConfiguration;
        return this;
    }

    /**
     * Get powerBIReportConfiguration
     * 
     * @return powerBIReportConfiguration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_POWER_B_I_REPORT_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PowerBIReportExportConfiguration getPowerBIReportConfiguration() {
        return powerBIReportConfiguration;
    }

    public void setPowerBIReportConfiguration(PowerBIReportExportConfiguration powerBIReportConfiguration) {
        this.powerBIReportConfiguration = powerBIReportConfiguration;
    }

    public ExportReportRequest paginatedReportConfiguration(
            PaginatedReportExportConfiguration paginatedReportConfiguration) {

        this.paginatedReportConfiguration = paginatedReportConfiguration;
        return this;
    }

    /**
     * Get paginatedReportConfiguration
     * 
     * @return paginatedReportConfiguration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PAGINATED_REPORT_CONFIGURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PaginatedReportExportConfiguration getPaginatedReportConfiguration() {
        return paginatedReportConfiguration;
    }

    public void setPaginatedReportConfiguration(PaginatedReportExportConfiguration paginatedReportConfiguration) {
        this.paginatedReportConfiguration = paginatedReportConfiguration;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ExportReportRequest exportReportRequest = (ExportReportRequest) o;
        return Objects.equals(this.format, exportReportRequest.format)
                && Objects.equals(this.powerBIReportConfiguration, exportReportRequest.powerBIReportConfiguration)
                && Objects.equals(this.paginatedReportConfiguration, exportReportRequest.paginatedReportConfiguration);
    }

    @Override
    public int hashCode() {
        return Objects.hash(format, powerBIReportConfiguration, paginatedReportConfiguration);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExportReportRequest {\n");
        sb.append("    format: ").append(toIndentedString(format)).append("\n");
        sb.append("    powerBIReportConfiguration: ").append(toIndentedString(powerBIReportConfiguration)).append("\n");
        sb.append("    paginatedReportConfiguration: ").append(toIndentedString(paginatedReportConfiguration))
                .append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
